"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from api import get_str
import os
from dotenv import load_dotenv

load_dotenv()


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u08+g#%-qff+x480z9!8-xvir@q5r5s1ul&o-xz@es#lcbo(sg'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# SECURITY WARNING: THIS IS DANGEROUS, DO NOT ALLOW IN PRODUCTION
CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_CREDENTIALS = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'api.gina.apps.GinaConfig',
    'django_filters',
    'djoser',
    'corsheaders',
    'django_extensions',
    'drf_spectacular',
    'drf_spectacular_sidecar',
    'storages',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}


DJOSER = {
    'SEND_ACTIVATION_EMAIL': True,
    'PASSWORD_RESET_CONFIRM_URL': 'reset_password.html?uid={uid}&token={token}',
    'ACTIVATION_URL': 'activate.html?uid={uid}&token={token}',
    'EMAIL': {
        'activation': 'api.gina.emails.CustomActivationEmail',  # Path to the custom template
    },
    'SERIALIZERS': {
        'user_create': 'api.gina.serializer.CustomUserCreateSerializer',  # your serializer
    }
}


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = get_str("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = get_str("EMAIL_HOST_PASSWORD")

ROOT_URLCONF = 'api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'ui')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': get_str("DB_NAME"),
        'USER': get_str("DB_USER"),
        'PASSWORD': get_str("DB_PASSWORD"),
        'HOST': get_str("DB_HOST"),
        'PORT': get_str("DB_PORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'formatters': {
                'superverbose': {
                        'format': '%(levelname)s %(asctime)s %(module)s:%(lineno)d %(process)d %(thread)d %(message)s'
                        },
                'verbose': {
                        'format': '%(levelname)s %(asctime)s %(module)s:%(lineno)d %(message)s'
                        },
                'simple': {
                        'format': '%(levelname)s %(message)s'
                        },
        },
        'handlers': {
                'console': {
                        'class': 'logging.StreamHandler',
                        'formatter': 'verbose',
                        },
                },
        'root': {
                'handlers': ['console'],
                'level': 'INFO',
                'formatter': 'verbose',
                },
        'loggers': {
                'django.utils.autoreload': {
                        'handlers': [],
                        'level': 'ERROR',
                        },

                'django': {
                        'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
                        'handlers': ['console'],
                        'propagate': True,
                        },

                'somelib': {
                        'level': 'DEBUG',
                        'handlers': ['console'],
                        'propagate': False,
                        },
      
                'somelib.package': {
                        'level': 'ERROR',
                        'handlers': ['console'],
                        'propagate': False,
                        },

                'my_app': {
                        'level': 'DEBUG',
                        'handlers': ['console'],
                        'propagate': False,
                        },
                }
        }

STATIC_ROOT = "./static/"

SPECTACULAR_SETTINGS = {
    'TITLE': 'UPRI GINA API',
    'DESCRIPTION': 'The backend API for the UP Resilience Institute\'s Grow Indigenous Trees App (GINA)',
    'SWAGGER_UI_DIST': 'SIDECAR',
    'SWAGGER_UI_FAVICON_HREF': 'SIDECAR',
    'SWAGGER_UI_FAVICON_HREF': STATIC_URL + "favicon.png",
}

CSP_DEFAULT_SRC = ("'self'", "'unsafe-inline'")
CSP_IMG_SRC = ("'self'", "data:")

STORAGES = {
    "default": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"},
    "staticfiles": {"BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage"},
}


AWS_ACCESS_KEY_ID = get_str("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = get_str("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = get_str("AWS_STORAGE_BUCKET_NAME")
AWS_S3_SIGNATURE_NAME = "s3v4"
AWS_S3_REGION_NAME = get_str("REGION")
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = "public-read"
AWS_S3_VERIFY = False
AWS_QUERYSTRING_AUTH = False
